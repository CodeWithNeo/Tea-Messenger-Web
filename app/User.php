<?php

/**
 *  Generated by IceTea Framework 0.0.1
 *  Created at 2017-12-13 17:33:03
 *  Namespace App
 */

namespace App;

use PDO;
use IceTea\Database\DB;
use IceTea\Support\Model;

class User extends Model
{

    public function __construct()
    {
        parent::__construct();
    }

    public static function getInfo($value, $field, $table = "users")
    {
        $st = DB::prepare("SELECT `a`.`user_id`,`a`.`username`,`a`.`email`,`a`.`verified`,`a`.`status`,`a`.`registered_at`,`b`.`first_name`,`b`.`last_name`,`b`.`photo`,`b`.`bio` FROM `users` AS `a` INNER JOIN `users_info` AS `b` ON `a`.`user_id`=`b`.`user_id` WHERE {$field} = :bind LIMIT 1;");
        pc($st->execute(
            [
                ":bind" => $value
            ]
        ), $st);
        return $st->fetch(PDO::FETCH_ASSOC);
    }

    public static function changeInfo($userid, $data)
    {
        $st = DB::prepare("UPDATE `users` SET `username`=:username, `email`=:email WHERE `user_id`=:user_id LIMIT 1;");
        pc($st->execute(
            [
                ":username" => $data['username'],
                ":email"    => $data['email'],
                ":user_id"  => $userid
            ]
        ), $st);
        $st = DB::prepare("UPDATE `users_info` SET `first_name`=:first_name, `last_name`=:last_name WHERE `user_id`=:user_id LIMIT 1;");
        pc($st->execute(
            [
                ":first_name" => $data['first_name'],
                ":last_name"  => $data['last_name'],
                ":user_id"    => $userid
            ]
        ), $st);
        return true;
    }

    public static function changePhoto($userid, $photoFile)
    {
        $st = DB::prepare("UPDATE `users_info` SET `photo`=:photoFile WHERE `user_id`=:user_id LIMIT 1;");
        pc($st->execute(
            [
                ":photoFile" => $photoFile,
                ":user_id"   => $userid
            ]
        ), $st);
        return true;
    }

    public static function changePassword($userid, $new_password)
    {
        $st = DB::prepare("UPDATE `users` SET `password`=:new_password WHERE `user_id`=:user_id LIMIT 1;");
        pc($st->execute(
            [
                ":new_password" => password_hash($new_password, PASSWORD_BCRYPT),
                ":user_id"   => $userid
            ]
        ), $st);
        return true;
    }
}
